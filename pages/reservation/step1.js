import React, { useState } from "react";
import { Box, MotionDiv } from "../../styles/components";
import { PageTransition } from "../../components/PageTransition";
import { Nav } from "../../components/reservation/Nav";
import { getPostDatas } from "../../lib/posts";
import { convertLink } from "../../lib/convert";
import Image from "next/image";
import Head from "next/head";
import { Button } from "../../components/Button";

export const getStaticProps = async () => {
  const postDatas = await getPostDatas([
    "reservation/common",
    "reservation/step1",
  ]);
  console.log(postDatas);
  return {
    props: {
      data: postDatas,
    },
  };
};

export default function Step1({ data }) {
  const [active, setActive] = useState("none");
  return (
    <PageTransition>
      <Head>
        <title>Shotfelice-撮影カテゴリの選択</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box display="flex" justifyContent="center" pt={[20, 50]}>
        <Box maxWidth={890} width="100%" overflow="hidden" px={["4%", 0]}>
          <Nav nav={data.nav} />
          <Box my={[20, 50]} width="100%" borderBottom="solid 1px #e1e1e1" />

          <Box>
            <Box
              display="flex"
              alignItems="center"
              fontWeight="bold"
              color="black"
            >
              <Box fontSize={34}>1.</Box>
              <Box fontSize={24}>
                {data.nav[0].slice(2, data.nav[0].length)}
              </Box>
            </Box>
            <Box fontSize={16} mt={26} mb={26} lineHeight={2}>
              {convertLink(data.content)}
            </Box>
          </Box>

          <Box
            display="flex"
            width="100%"
            flexWrap="wrap"
            style={{ boxSizing: "border-box" }}
          >
            {[...Array(data.items.title.length).keys()].map((i) => {
              return (
                <Card
                  key={i}
                  active={active}
                  setActive={setActive}
                  items={data.items}
                  index={i}
                />
              );
            })}
          </Box>

          <Button href="/reservation/step2" mt={42} mb={200}>
            {data.next_btn_text}
          </Button>
        </Box>
      </Box>
    </PageTransition>
  );
}

function Card({ active, setActive, items, index }) {
  return (
    <MotionDiv
      whileHover={{ opacity: 0.8 }}
      onTap={() => {
        if (active !== items.title[index]) {
          setActive(items.title[index]);
          localStorage.setItem("category", items.title[index]);
        } else {
          setActive("none");
          localStorage.setItem("category", "none");
        }
      }}
      mr={[0, index % 2 === 0 ? 5 : 10]}
      ml={[0, index % 2 === 1 ? 5 : 10]}
      mb={[5, index < 2 ? 30 : 0]}
      style={{ cursor: "pointer" }}
      height={160}
      width={["100%", "calc(50% - 15px)"]}
      background="white"
      display="flex"
      alignItems="center"
      justifyContent="center"
      variants={{
        active: {
          boxShadow: "0px 0px 16px rgba(0, 0, 0, 0.3)",
        },

        inactive: {
          boxShadow: "0px 0px 0px rgba(0, 0, 0, 0.1)",
        },
      }}
      animate={active === items.title[index] ? "active" : "inactive"}
    >
      <Box width={160} height={160}>
        <Image src={items.url[index]} width={160} height={160} alt={"person"} />
      </Box>
      <Box
        width="calc(100% - 160px)"
        height={160}
        display="flex"
        alignItems="flex-start"
        justifyContent="center"
        flexDirection="column"
        border="solid 1px #e1e1e1"
        px={20}
      >
        <Box fontSize={[18, 20]} fontWeight="bold" mb={10}>
          {items.title[index]}
        </Box>
        <Box fontSize={14} lineHeight={1.6}>
          {items.content[index]}
        </Box>
      </Box>
    </MotionDiv>
  );
}
